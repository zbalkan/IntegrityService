name: Release when tagged

on:
  workflow_dispatch:

  push:
    branches: [master]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '**.ADML'
      - '**.ADMX'
      - '**.ico'
      - '**.reg'
    tags:
      - "*.*.*"

  pull_request:
    branches: [master]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '**.ADML'
      - '**.ADMX'
      - '**.ico'
      - '**.reg'
    tags:
      - "*.*.*"

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install Wix
        run: |
          dotnet tool install --global wix
          wix --version

      - name: Install Wix extension
        run: |
          cd IntegrityService.Installer
          wix extension add WixToolset.Util.wixext/5.0.0
          wix extension list

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: Restore and publish main project
        run: msbuild IntegrityService\IntegrityService.csproj /t:restore /t:publish /p:Configuration=Release /p:SelfContained=true /p:RuntimeIdentifier=win-x64 /p:PublishsingleFile=true

      - name: Create a publish directory
        run: mkdir D:\a\IntegrityService\IntegrityService\publish

      - name: Copy executable in the publish directory
        run: Copy-Item -Path D:\a\IntegrityService\IntegrityService\IntegrityService\bin\Release\net8.0-windows10.0.17763.0\win-x64\IntegrityService.exe -Destination D:\a\IntegrityService\IntegrityService\publish\ -Verbose

      - name: Enumerate root folder
        shell: powershell
        run: ls -r

      - name: Build installer
        run: |
          cd IntegrityService.Installer
          wix extension list
          wix build -arch x64 -ext "D:\a\IntegrityService\IntegrityService\IntegrityService.Installer\.wix\extensions\WixToolset.Util.wixext\5.0.0\wixext5\WixToolset.Util.wixext.dll" -pdbtype none -i publish -o "D:\a\IntegrityService\IntegrityService\publish\IntegrityService.msi" "D:\a\IntegrityService\IntegrityService\IntegrityService.Installer\Product.wxs"
          Write-Output "Testing installer file location:"
          Test-Path -Path D:\a\IntegrityService\IntegrityService\publish\IntegrityService.msi
          Remove-Item -Path D:\a\IntegrityService\IntegrityService\publish\IntegrityService.exe -Confirm:$false

      - name: Enumerate root folder
        shell: powershell
        run: ls -r

      - name: Enumerate files to publish
        shell: powershell
        run: Get-ChildItem -Path D:\a\IntegrityService\IntegrityService\publish

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "See commit log for details"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: D:\a\IntegrityService\IntegrityService\publish\IntegrityService.msi
          asset_name: IntegrityService.msi
          asset_content_type: application/zip
